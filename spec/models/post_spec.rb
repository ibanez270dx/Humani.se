require "rails_helper"

describe Post do

  it "has a valid factory" do
    expect(build(:post)).to be_valid
  end

  let(:post) { create(:post) }

  describe "ActiveModel validations" do
    it { expect(post).to validate_presence_of(:title) }
    it { expect(post).to validate_presence_of(:body) }
    it { expect(post).to validate_presence_of(:abstract) }

    context "Autogenerates + parameterizes slug from title" do
      let(:updated_title) { Faker::Beer.name }

      it "defaults to autogenerated title" do
        expect(post.slug).to eql post.title.parameterize
      end

      it "updates title, keeps existing slug" do
        original_slug = post.slug
        post.update_attributes(title: updated_title)
        expect(post.title).to eql updated_title
        expect(post.slug).to eql original_slug
      end

      it "can be set individually" do
        title, slug = Faker::Hipster.sentence(4), Faker::Hipster.sentence(2)
        post = create(:post, title: title, slug: slug)
        expect(post.title).to eql title
        expect(post.slug).to eql slug.parameterize
      end
    end
  end

  describe "ActiveRecord associations" do
    it { expect(post).to belong_to(:author) }
  end

end
